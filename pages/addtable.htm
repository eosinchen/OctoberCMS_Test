title = "AddTable"
url = "/addtable"
layout = "default"
is_hidden = 0
==
<?php
function onStart()
{
    $this['message'] = 'ABCDEFG';
    
    $this->getProdFromEShop();

    $this->getEventProdFromEShop('ST042910074115');

    
	/*
    foreach ($this['prods'] as $prod) {
       // $rs_array[$rs_one['id']] = $rs_one['name'].'/'.$rs_one['tel'];
       // $name = $rs_one['content'];
       echo $prod->prodName.' '.$prod->price;
       echo "<br>";
       // echo 1;
	}
	*/
    
}

function getProdFromEShop()
{
    $sql = "SELECT prodtb.*,
        classtb.cName as className 
        from prodtb 
        left join classtb on prodtb.cid = classtb.cid
        where prodtb.trash = '0' 
        and prodtb.finish = '1'
        order by prodtb.sort asc,prodtb.pid desc";

    $this['prods'] = Db::connection('porclean')->select($sql);
}

function getEventProdFromEShop($eventNo = false)
{
	
	$sql = "SELECT eventProdtb.*,
				   prodtb.prodName,
				   prodtb.price as price_o 
			  from eventProdtb 
		 left join prodtb
				on eventProdtb.pid = prodtb.pid
			 where eventProdtb.eventNo = '$eventNo' 
			   and eventProdtb.trash = '0'
			   and prodtb.trash = '0'
			   and prodtb.onweb = '1'
		  order by eventProdtb.sort asc, eventProdtb.price asc"; 
	
    $this['eventProds'] = Db::connection('porclean')->select($sql);
}

function onFormSubmit()
{
	// $eventPrice = input('eventPrice');
	
	// print_r($eventPrice);

	$this->removeEventProdByEventNo('ST042910074115_123');
    $this->addEventProd('ST042910074115_123');

	// $pord_table = input('prod_table');
	// echo $pord_table.rows[0].cell[1].innerHTML;
	
	// $x = document.getElementById("prod_table").rows.length;	
	// document.getElementById("demo").innerHTML = "Found " + $x + " tr elements in the table.";
}

function removeEventProdByEventNo($eventNo = false) {

	$sql = "DELETE from eventProdtb where eventNo = '$eventNo'"; 
	Db::connection('porclean')->delete($sql);
}

function addEventProd($eventNo = false) {

	$eventPid = input('eventPid');
	$eventProdNo = input('eventProdNo');
	$eventPrice = input('eventPrice');

	if ($eventPid == null) return;
	
	for($i=0; $i<count($eventPid); $i++){

		// print_r($eventPid[$i].'/'.$eventProdNo[$i].'/'.$eventPrice[$i].'///');

		$sql = "INSERT into eventProdtb set 
					eventNo = '$eventNo',
					pid     = '$eventPid[$i]',
					prodNo  = '$eventProdNo[$i]',
					price   = '$eventPrice[$i]'
				";
		
		Db::connection('porclean')->insert($sql);
	}
}

?>
==
<div class='container'>

	<div id="app">
	
		<form id="data_form" class="form-horizontal" role="form">
		
			<!-- 隱藏用 selector，用來存放 eventProds 的內容-->
			<select id="eventProdsSelect" name="eventProdsSelect" type="text" class="form-control">
				{% for item in eventProds %}
					<option value="{{item.id}}///{{item.pid}}///{{item.prodNo}}///{{item.prodName}}///{{item.price_o}}///{{item.price}}">{{item.id}}///{{item.pid}}///{{item.prodNo}}///{{item.prodName}}///{{item.price_o}}///{{item.price}}</option>
				{% endfor %}            
			</select>

			<div class="form-group">
				<label class="control-label col-sm-2" for="prod_select">選擇產品</label>
				<div class="col-sm-6">
					<select id="prod_select" name="prod_select" type="text" class="form-control">
						{% for item in prods %}
							<option value="{{item.pid}}///{{item.prodNo}}///{{item.prodName}}///{{item.price}}">{{item.prodName}} / NTD:{{item.price}}</option>
						{% endfor %}            
					</select>
				</div>
				<button type="button" class="btn col-sm-1" @click.prevent="addEventProd()">加入</button>
			</div>

			<!--
			<select id="prod_select" name="prod_select" type="text" class="form-control">
				{% for item in eventProds %}
					<option>{{item.prodName}} / NTD:{{item.price_o}}</option>
				{% endfor %}            
			</select>
			
			{% for item in eventProds %}
				<button-counter title='{{item.id}} / {{item.prodName}}'></button-counter>					
			{% endfor %}            
			-->

			<!-- Prod Table -->
			<div class="form-group">
				<table class="table table-striped" id="prod_table" name="prod_table">
					<thead>
						<tr>
						  <th scope="col">ID</th>
						  <th scope="col">PID</th>
						  <th scope="col">ProdNo</th>
						  <th scope="col">產品名稱</th>
						  <th scope="col">原始定價</th>
						  <th scope="col">特惠價格</th>
						  <th scope="col">動作</th>
						</tr>
					</thead>
					<tbody>
						
						<!-- 從 PHP 將資料放到 Table 中，目前作廢 -->
						<!--
						{% for item in eventProds %}
						<tr>
							<td id='id' value={{item.id}}>{{item.id}}</td>
							<td id='pid' value={{item.pid}}>{{item.pid}}</td>
							<td id='prodName'>{{item.prodName}}</td>
							<td id='price_o'>{{item.price_o}}</td>
							<td>
								<input id='price' type="number" name="eventPrice[]" value={{item.price}} class="form-control border-input" placeholder="活動價">
							</td>
							<td>
								<button class="btn" @click.prevent="removeProd(item)">移除</button>
								<button class="btn" onclick="delRow(item)">移除</button>
							</td>
						</tr>
						{% endfor %}            
						-->
	
						<!-- 自 Vue 的 eventProds 中，將項目秀出來-->
						<tr v-for="item in eventProds">
							<td>${item.id}</td>
							<td>${item.pid}<input type="hidden" name="eventPid[]" :value="item.pid"></td>
							<td>${item.prodNo}<input type="hidden" name="eventProdNo[]" :value="item.prodNo"></td>
							<td>${item.prodName}</td>
							<td>${item.price_o}</td>
							<td>
								<input type="number" name="eventPrice[]" :value="item.price" class="form-control border-input" placeholder="活動價">
							</td>
							<td>
								<button class="btn" @click.prevent="removeProd(item)">移除</button>
							</td>
						</tr>
						
					</tbody>
				</table>
			</div>

			<!--
			<div class="col-md-7">
				<div class="card cardContent">
					<div class="formGroup flex">
						<select name="mid" class="form-control border-input" v-model="prod">
							<option value="">請選擇產品</option>
							<option v-for="item in prods" :value="item.pid">${item.prodName} / $${item.price}</option>
						</select>
						<button type="button" class="btn" v-on:click='addEventProd()' >加入</button>
					</div>
				</div>

				<div class="card cardContent eventProds">
					<div class="formGroup" v-for="item in eventProds">
						<div class="prodName">
							<span>${item.prodName}</span>
							<span>${formatPrice(item.price)}</span>
						</div>
						<input type="number" name="price" class="form-control border-input" placeholder="活動價" v-model="item.price">
						<button class="btn" @click.prevent="removeProd(item)">移除</button>
					</div>
				</div>

			</div>

			<button-counter title='1'></button-counter>
			-->

			<input data-request="onFormSubmit" data-request-files data-request-flash class="btn btn-primary" data-dismiss="modal" type="submit" value="確認" />

			<p id="demo"></p>

		</form>
		
	</div>
	 
</div>


<!-- development version, includes helpful console warnings -->
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>
<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

<script>
	
	/*
	function addRow() {
	
		var prod_table = document.getElementById("prod_table");

		// Selector 的內容
		var selector = document.getElementById("prod_select");
		var itemVaule = selector.options[selector.selectedIndex].value;
		var valueArray = itemVaule.split("///");

		for (var i=1; i<prod_table.rows.length; i++)
		{
			// 檢查，若 eventProds 中已經有此項目，則不加入
			// 使用 cells[1] 的內容(產品 PID) 作檢查
			if (valueArray[0] == prod_table.rows.item(i).cells[1].innerText) {
				Swal.fire("產品已存在!!", valueArray[1]);
				return;
			}
		}				
		
		// 加所選項目，加入到 Table 中
		var newRow = prod_table.insertRow(-1);

		// 加入 ID
		newCell = newRow.insertCell(-1);
		newCell.innerHTML = "";

		// 加入 PID
		newCell = newRow.insertCell(-1);
		newCell.innerHTML = valueArray[0];
		
		// 加入 產品名稱
		newCell = newRow.insertCell(-1);
		newCell.innerHTML = valueArray[1];

		// 加入 原始定價
		newCell = newRow.insertCell(-1);
		newCell.innerHTML = valueArray[2];
		
		// 加入 特惠價格
		newCell = newRow.insertCell(-1);
		newCell.innerHTML = '<input id="price" type="number" name="eventPrice[]" class="form-control border-input" placeholder="活動價" vaule="' + valueArray[2] + '">';
		
		// 加入 動作
		newCell = newRow.insertCell(-1);
		newCell.innerHTML = '<button class="btn" onclick="delRow(item)">移除</button>';
	}
	
	function delRow() {

		alert("Del Row");
		
		Swal.fire({
			title: '警告',
			text: "認刪除此項目？",
			type: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#3085d6',
			cancelButtonColor: '#d33',
			confirmButtonText: '確認刪除',
			cancelButtonText: '取消刪除'
		}).then((result) => {
			
			if (result.value) {
				for (var i = 0; i < this.eventProds.length; i++) {  
					if (item.prodName == this.eventProds[i].prodName) {
						this.eventProds.splice(i, 1);
						break;
					}
				}
			}
		})
	}
	*/
	
	// 定义一个名为 button-counter 的新组件
	Vue.component('button-counter', {
	  delimiters: ['${', '}'],
	  data: function () {
		return {
		  count: 0
		}
	  },
	  props: ['title'],
	  mounted: function() {
		// alert('歡迎使用')
	  },
	  template: '<button v-on:click="count++">${title}, You clicked me ${count} times.</button>'
	})
	
	// var app2 = new Vue({ el: '#components-demo', delimiters: ['${', '}']})	
	
    var app = new Vue({
        el: '#app',
        delimiters: ['${', '}'],
        data: {
            message: 'Hello Vue!',
            todos: [
                { text: 'Learn JavaScript' },
                { text: 'Learn Vue' },
                { text: 'Build something awesome' }
            ],
			event: {},
			prods: [],
			members: [],
			eventProds: [],
			prod: ''
        },
		mounted : function() {
			
			var selector = document.getElementById("eventProdsSelect");
			
			// alert(selector.length);
			
			for (var i = 0; i < selector.length; i++) {

				// <option value="{{item.id}}///{{item.pid}}///{{item.prodNo}}///{{item.prodName}}///{{item.price_o}}///{{item.price}}"></option>
				eventProdsArray = (selector.options[i].value).split("///");
				this.eventProds.push({id:eventProdsArray[0], pid:eventProdsArray[1], prodNo:eventProdsArray[2], prodName:eventProdsArray[3], price_o:eventProdsArray[4], price:eventProdsArray[5]});
			}
		},
		methods: {
			sayHi(){
				alert('歡迎使用')
				
				swal("Hello world!");
			},
			formatPrice: function(value) {
				let val = (value/1).toFixed(0).replace('.', ',')
				return val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
			},
			addEventProd: function(){

				/*
				var prod_table = document.getElementById("prod_table");

				// Selector 的內容
				var selector = document.getElementById("prod_select");
				var itemVaule = selector.options[selector.selectedIndex].value;
				var valueArray = itemVaule.split("///");

				for (var i=1; i<prod_table.rows.length; i++)
				{
					// 檢查，若 eventProds 中已經有此項目，則不加入
					// 使用 cells[1] 的內容(產品 PID) 作檢查
					if (valueArray[0] == prod_table.rows.item(i).cells[1].innerText) {
						Swal.fire("產品已存在!!", valueArray[1]);
						return;
					}
				}				
				
				// 加所選項目，加入到 Table 中
				var newRow = prod_table.insertRow(-1);

				// 加入 ID
				newCell = newRow.insertCell(-1);
				newCell.innerHTML = "";

				// 加入 PID
				newCell = newRow.insertCell(-1);
				newCell.innerHTML = valueArray[0];
				
				// 加入 產品名稱
				newCell = newRow.insertCell(-1);
				newCell.innerHTML = valueArray[1];

				// 加入 原始定價
				newCell = newRow.insertCell(-1);
				newCell.innerHTML = valueArray[2];
				
				// 加入 特惠價格
				newCell = newRow.insertCell(-1);
				newCell.innerHTML = '<input id="price" type="number" name="eventPrice[]" class="form-control border-input" placeholder="活動價" vaule="' + valueArray[2] + '">';
				
				// 加入 動作
				newCell = newRow.insertCell(-1);
				newCell.innerHTML = '<button class="btn" onclick="delRow(item)">移除</button>';
				*/

				// Selector 的內容
				var selector = document.getElementById("prod_select");
				var itemVaule = selector.options[selector.selectedIndex].value;
				var valueArray = itemVaule.split("///");

				// 檢查，若 eventProds 中已經有此項目，則不加入
				for (var i = 0; i < this.eventProds.length; i++) {
					if (valueArray[0] == this.eventProds[i].pid) {
						Swal.fire("產品已存在!!", valueArray[1]);
						return;
					}
				}
				
				this.eventProds.push({pid:valueArray[0], prodNo:valueArray[1], prodName:valueArray[2], price_o:valueArray[3], price:valueArray[3]});
			},
			eventEdit: function(){
				$.post(URL,{
					action: 'eventEdit',
					event: app.event,
					prods: app.eventProds
				},
				function(res){
					
					swal({
						title: '儲存成功',
						type: 'success'
					},function(res){
						location.href="/admin/event/reSellerList";
					})
				})
			},
			removeProd: function(item){

				Swal.fire({
					title: '警告',
					text: "認刪除此項目？",
					type: 'warning',
					showCancelButton: true,
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					confirmButtonText: '確認刪除',
					cancelButtonText: '取消刪除'
				}).then((result) => {
					
					if (result.value) {
						for (var i = 0; i < this.eventProds.length; i++) {  
							if (item.prodName == this.eventProds[i].prodName) {
								this.eventProds.splice(i, 1);
								break;
							}
						}
					}
				})
			}
		}
    })

</script>